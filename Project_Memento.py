# üì¶ –ö–ª–∞—Å –ö–Ω–∏–≥–∞
class Book:
    def __init__(self, title, genre, price):
        self.title = title
        self.genre = genre
        self.price = price

    def accept(self, visitor):
        visitor.visit_book(self)


# üßë‚Äçüíº –ö–ª–∞—Å –ö–ª—ñ—î–Ω—Ç
class Customer:
    def __init__(self, name):
        self.name = name
        self.orders = []

    def add_order(self, order):
        self.orders.append(order)

    def accept(self, visitor):
        visitor.visit_customer(self)


# üßæ –ö–ª–∞—Å –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è
class Order:
    def __init__(self, customer, books):
        self.customer = customer
        self.books = books

    def accept(self, visitor):
        visitor.visit_order(self)


# üì¶ –ö–ª–∞—Å –ö–æ—à–∏–∫–∞ –∑ Memento
class Cart:
    def __init__(self):
        self.books = []

    def add_book(self, book):
        self.books.append(book)

    def remove_book(self, book):
        if book in self.books:
            self.books.remove(book)

    def create_memento(self):
        return CartMemento(self.books[:])

    def restore(self, memento):
        self.books = memento.get_state()


class CartMemento:
    def __init__(self, state):
        self._state = state

    def get_state(self):
        return self._state[:]


class CartHistory:
    def __init__(self):
        self.history = []

    def save(self, memento):
        self.history.append(memento)

    def undo(self):
        if self.history:
            return self.history.pop()
        return None


# ‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ Memento
class UserSettings:
    def __init__(self, theme, language):
        self.theme = theme
        self.language = language

    def change_settings(self, theme, language):
        self.theme = theme
        self.language = language

    def create_memento(self):
        return SettingsMemento(self.theme, self.language)

    def restore(self, memento):
        self.theme = memento.theme
        self.language = memento.language


class SettingsMemento:
    def __init__(self, theme, language):
        self.theme = theme
        self.language = language


# üß† –ü–∞—Ç–µ—Ä–Ω –í—ñ–¥–≤—ñ–¥—É–≤–∞—á
class Visitor:
    def visit_book(self, book):
        pass

    def visit_customer(self, customer):
        pass

    def visit_order(self, order):
        pass


# üìä –í—ñ–¥–≤—ñ–¥—É–≤–∞—á –¥–ª—è –∞–Ω–∞–ª—ñ—Ç–∏–∫–∏
class SalesAnalyticsVisitor(Visitor):
    def __init__(self):
        self.genre_count = {}
        self.customer_activity = {}
        self.total_revenue = 0

    def visit_book(self, book):
        self.genre_count[book.genre] = self.genre_count.get(book.genre, 0) + 1
        self.total_revenue += book.price

    def visit_customer(self, customer):
        self.customer_activity[customer.name] = len(customer.orders)

    def visit_order(self, order):
        for book in order.books:
            book.accept(self)


# üìÑ –í—ñ–¥–≤—ñ–¥—É–≤–∞—á –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∑–≤—ñ—Ç—ñ–≤
class ReportVisitor(Visitor):
    def visit_book(self, book):
        print(f"–ö–Ω–∏–≥–∞: {book.title}, –ñ–∞–Ω—Ä: {book.genre}, –¶—ñ–Ω–∞: {book.price}")

    def visit_customer(self, customer):
        print(f"–ö–ª—ñ—î–Ω—Ç: {customer.name}, –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω—å: {len(customer.orders)}")

    def visit_order(self, order):
        print(f"–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞: {order.customer.name}, –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–Ω–∏–≥: {len(order.books)}")
        for book in order.books:
            book.accept(self)


# ‚úÖ –ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
if __name__ == "__main__":
    # –ö–Ω–∏–≥–∏ —Ç–∞ –∫–ª—ñ—î–Ω—Ç–∏
    book1 = Book("1984", "–î–∏—Å—Ç–æ–ø—ñ—è", 300)
    book2 = Book("–ì–∞—Ä—Ä—ñ –ü–æ—Ç—Ç–µ—Ä", "–§–µ–Ω—Ç–µ–∑—ñ", 400)
    book3 = Book("–ß–∞—Ä–ª—ñ —ñ —à–æ–∫–æ–ª–∞–¥–Ω–∞ —Ñ–∞–±—Ä–∏–∫–∞", "–î–∏—Ç—è—á–∞", 250)

    customer = Customer("–û–ª–µ–≥")
    cart = Cart()
    cart_history = CartHistory()

    # –î–æ–¥–∞–≤–∞–Ω–Ω—è –∫–Ω–∏–≥ –¥–æ –∫–æ—à–∏–∫–∞
    cart.add_book(book1)
    cart_history.save(cart.create_memento())

    cart.add_book(book2)
    cart_history.save(cart.create_memento())

    cart.remove_book(book1)
    cart_history.save(cart.create_memento())

    # –í—ñ–¥–∫–∞—Ç —Å—Ç–∞–Ω—É
    cart.restore(cart_history.undo())

    # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    settings = UserSettings("–°–≤—ñ—Ç–ª–∞", "UA")
    backup = settings.create_memento()
    settings.change_settings("–¢–µ–º–Ω–∞", "EN")
    settings.restore(backup)

    # –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è
    order = Order(customer, cart.books[:])
    customer.add_order(order)

    # –í—ñ–¥–≤—ñ–¥—É–≤–∞—á—ñ
    analytics = SalesAnalyticsVisitor()
    report = ReportVisitor()

    order.accept(analytics)
    customer.accept(analytics)

    order.accept(report)
    customer.accept(report)

    print("–ê–Ω–∞–ª—ñ—Ç–∏–∫–∞ –∑–∞ –∂–∞–Ω—Ä–∞–º–∏:", analytics.genre_count)
    print("–ê–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –∫–ª—ñ—î–Ω—Ç—ñ–≤:", analytics.customer_activity)
    print("–ó–∞–≥–∞–ª—å–Ω–∏–π –ø—Ä–∏–±—É—Ç–æ–∫:", analytics.total_revenue)